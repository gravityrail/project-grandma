

<div id="debug">

</div>

<div id="dragdrop">
Drag files here
</div>

<style>
#dragdrop {
  border:5px dashed gray;
  height:100px;
  border-radius:20px;
  width:50%;
  margin:auto;
  font-size:20px;
  color:Gray;
  text-align:center;
}
</style>

<script>
function processXHR(file, index) {
/* 			    var file = files[i]; */
/* 			    var index = i; */
			    
  				var xhr = new XMLHttpRequest(),
  					container = document.getElementById("item"+index),
  					loader;
  					fileUpload = xhr.upload,
  					progressDomElements = [
  						document.createElement('div'),
  						document.createElement('p')
  					];
  				
  				progressDomElements[0].className = "loader01";
  				progressDomElements[0].appendChild(progressDomElements[1]);
  				
  				container.appendChild(progressDomElements[0]);
  				loader = document.getElementsByClassName("loader01");
  				
  				fileUpload.addEventListener("progress", function(event) {
  					if (event.lengthComputable) {
  						var percentage = Math.round((event.loaded * 100) / event.total),
  						loaderIndicator = container.firstChild.nextSibling.firstChild;
  						if (percentage < 100) {
  							loaderIndicator.style.width = percentage + "px";
  						}
  					}
  				}, false);
  				
  				fileUpload.addEventListener("load", function(event) {
  					loader[index].style.display = "none";
  					console.log("xhr upload of "+container.id+" complete");
  				}, false);
  				
  				fileUpload.addEventListener("error", function(evt) {
  					console.log("error: " + evt.code);
  				}, false);
  
//  				xhr.open("POST", "upload.php");
  				xhr.open('POST', 'http://media.grandmaproject.com/');
  				xhr.setRequestHeader("If-Modified-Since", "Mon, 26 Jul 1997 05:00:00 GMT");
  				xhr.setRequestHeader("Cache-Control", "no-cache");
  				xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
  				xhr.setRequestHeader("X-File-Name", file.fileName);
  				xhr.setRequestHeader("X-File-Size", file.fileSize);
  				xhr.setRequestHeader("Content-Type", "multipart/form-data");
  				xhr.send(file);
}

var onGetJson = function() {}

$(document).ready(function () {
  
  var dropListing = document.getElementById("output-listing01");

  /**
    * Add drop functionality to our holder,
    * This is standard HTML5 File API
    */
	$("#dragdrop").addClass("sldropzone").bind('dragover',function(){return false;}).bind('drop', function(e){
		var holder= this;
		e = (e&&e.originalEvent?e.originalEvent:window.event) || e;
		
		if(e.preventDefault){
			e.preventDefault();
		}
		var files = (e.files||e.dataTransfer.files);
		
		var s = "";
		for (var i = 0; i < files.length; i++) {
			(function(i){
				  var reader = new FileReader();
			    reader.onload = function (event) {
			        holder.innerHTML = " "+(files[i].name)+"" + holder.innerHTML;
			    };
			    reader.readAsDataURL(files[i]);
			    
			    
			    //var files = evt.target.files,
					var filesFragment = document.createDocumentFragment(),
					domElements;
				
//  				dropArea.style.visibility = "hidden";
  				dropListing.style.display = "block";
  				dropListing.innerHTML = "";
  				console.log(files);
				
				  file = files[i]
				
  				//for(var i = 0, len = files.length; i < len; i++) {
  					// Stop people trying to upload massive files don't need for demo to work
  					//if(files[i].fileSize < 1048576) {
  						// Check for duplicate files and skip iteration if so. Safari bug.
  						//if(i != 0 && files[0].fileName === files[i].fileName) continue;
  						
  						domElements = [
  							document.createElement('li'),
  							document.createElement('span')
  						];
  						
  						domElements[1].appendChild(document.createTextNode(files[i].fileName + " " + Math.round((files[i].fileSize/1024*100000)/100000)+"K "));
  						domElements[0].id = "item"+i;
  						domElements[0].appendChild(domElements[1]);
  						
  						filesFragment.appendChild(domElements[0]);
  						
  						dropListing.appendChild(filesFragment);
  						
  						//get json descriptor of additional fields to post using XMLHTTPreq
  						$.getJSON('/s3_uploads', function(data) {
                var items = [];
              
                $.each(data, function(key, val) {
                  console.log('got ' + key + ' = ' + val);
                });
              
                var bucket = items['bucket'];
                var url = 'http://media.grandmaproject.com/'+bucket;
                
                $.post(url)
              
              });
  						
  						// Use xhr to send files to server async both Chrome and Safari support xhr2 upload and progress events
  						processXHR(file, i);
  					/*
} else {
  						alert("Please don't kill my server by uploading large files, anything below 1mb will work");
  					}
*/
  				//}
			})(i);
		}
		
		return false;
	});
});
</script>

<script>
function inspect(obj, maxLevels, level)
{
  var str = '', type, msg;

    // Start Input Validations
    // Don't touch, we start iterating at level zero
    if(level == null)  level = 0;

    // At least you want to show the first level
    if(maxLevels == null) maxLevels = 1;
    if(maxLevels < 1)     
        return '<font color="red">Error: Levels number must be > 0</font>';

    // We start with a non null object
    if(obj == null)
    return '<font color="red">Error: Object <b>NULL</b></font>';
    // End Input Validations

    // Each Iteration must be indented
    str += '<ul>';

    // Start iterations for all objects in obj
    for(property in obj)
    {
      try
      {
          // Show "property" and "type property"
          type =  typeof(obj[property]);
          str += '<li>(' + type + ') ' + property + 
                 ( (obj[property]==null)?(': <b>null</b>'):('')) + '</li>';

          // We keep iterating if this property is an Object, non null
          // and we are inside the required number of levels
          if((type == 'object') && (obj[property] != null) && (level+1 < maxLevels))
          str += inspect(obj[property], maxLevels, level+1);
      }
      catch(err)
      {
        // Is there some properties in obj we can't access? Print it red.
        if(typeof(err) == 'string') msg = err;
        else if(err.message)        msg = err.message;
        else if(err.description)    msg = err.description;
        else                        msg = 'Unknown';

        str += '<li><font color="red">(Error) ' + property + ': ' + msg +'</font></li>';
      }
    }

      // Close indent
      str += '</ul>';

    return str;
}
</script>

	<ul id="output-listing01"></ul>
	
	
<input type="file" multiple="true" id="upload_field" /><br/>
		<input type="button" value="go" onclick="$('#upload_field').triggerHandler('html5_upload.start');"/>
		<div id="progress_report">
			<div id="progress_report_name"></div>
			<div id="progress_report_status" style="font-style: italic;"></div>
			<div id="progress_report_bar_container" style="width: 90%; height: 5px;">
				<div id="progress_report_bar" style="background-color: blue; width: 0; height: 100%;"></div>
			</div>
		</div>
		<script type="text/javascript">
			$("#upload_field").html5_upload({
				autostart:false,
				method:'PUT',
				STATUSES:{
				'STARTED':'Started',
				'PROGRESS':'Progress',
				'LOADED':'Loaded',
				'FINISHED':'Finished'
				},
				headers:{
				'x-amz-acl':'bucket-owner-full-control',
				'Content-Type':function(file){
					var ext = file.fileName.split(".").pop();
					switch(ext){
						case 'htm':
						case 'html':
						case 'htmls':
						return 'text/html';
						case 'css':
						return 'text/css';
						case 'gif':
						return 'image/gif';
						case 'jpeg':
						case 'jpg':
						return 'image/jpeg';
						case 'png':
						return 'image/png';
						case 'pdf':
						return 'application/pdf';
						case 'zip':
						return 'application/zip';
						default:
						return 'application/octet-stream';
					}
					return('application/octet-stream');
				}
				},
				genName: function(file, number, total) {
					return file + "(" + (number+1) + " of " + total + ")";
				},
				url: function(number) {
//				  return 'http://s3.amazonaws.com/projectgrandma_development';
            var url = 'http://media.grandmaproject.com/' + $('#upload_field')[0].files[number].fileName
//					return 'testing/' + $('#upload_field')[0].files[number].fileName;
				},
				sendBoundary: false,
				setName: function(text) {
						$("#progress_report_name").text(text);
				},
				setStatus: function(text) {
					$("#progress_report_status").text(text);
				},
				setProgress: function(val) {
					$("#progress_report_bar").css('width', Math.ceil(val*100)+"%");
				},
				onFinishOne: function(event, response, name, number, total) {
				}
			});
		</script>	
